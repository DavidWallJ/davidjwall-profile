@mixin background-color($arguments...) {
  @include themify('background-color', $arguments...);
}

@mixin color($arguments...) {
  @include themify('color', $arguments...);
}

@mixin background-image-url($arguments...) {
  @include themify('background-image', $arguments...);
}

@mixin loginCard {
    display: grid;
    grid-column: col-start 2 / col-end 7;
    grid-template-rows: 48rem;
    grid-template-columns: -webkit-max-content;
    grid-template-columns: max-content;
    // grid-row-gap: 1.5rem;
    margin-top: calc(50vh - 25rem);
    background-position: 10% 20%;
    background-size: cover;
    position: relative;
    color: $font-color-multi-theme;
    padding: 3rem;
    z-index: 10;
    @include background-color('background-color');
    @include background-image-url('background-image');
    &::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
    }
    @include respond(tab-port) {
        grid-column: col-start 4 / col-end 5;
        background-image: none !important;
    }

    @include respond(phone) {
        grid-column: full-start / full-end;
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;
        height: 100vh;
        margin-top: 0;
        background-image: none !important;
    }
}

@mixin loginCardContainer {
    display: grid;
    // grid-row-gap: 1.5rem;
    z-index: 10;
    color: $font-color-multi-theme;
}

@mixin flexCenterSelf {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    justify-self: center;
    -ms-flex-item-align: center;
        align-self: center;
}

@mixin gridCenterSelf {
    display: grid;
    justify-self: center;
    align-self: center;
}

@mixin gridCenterContent {
    display: grid;
    justify-content: center;
    align-content: center;
}

// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 10px
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };    //600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };     //900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };    //1200px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };    //1800
    }
}